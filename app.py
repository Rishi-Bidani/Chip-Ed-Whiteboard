from flask import Flask, render_template, request, redirect, url_for
from flask_sqlalchemy import SQLAlchemy
from modules.database_model import db
#from modules.database_model import codeTable, Test
from flask_socketio import SocketIO

app = Flask(__name__)
app.config['SECRET_KEY'] = 'secret!'
socketio = SocketIO(app)

ENV = 'prod'    
### If the ENV is dev, it uses the psql on my (Drextex's) computer.
if ENV == 'dev':
    app.debug = True
    app.config['SQLALCHEMY_DATABASE_URI'] = 'postgresql://postgres:123456@localhost:5433/chiped'
else: # When ENV is changed to something else, it should use the Heroku database.
    app.debug = False
    app.config['SQLALCHEMY_DATABASE_URI'] = 'postgres://tlvibsrdjvpuwk:a268e9a77940e8ce8a91671d86eaeb81b6a49f3a514c9479fe7b6cb0922192a3@ec2-52-6-178-202.compute-1.amazonaws.com:5432/d2vdtfkq767lvh'

app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

db = SQLAlchemy(app)

class codeTable(db.Model):
    ### This table contains the code generated by a teacher. 
    __tablename__ = "codeTable"
    id = db.Column(db.Integer, primary_key = True)
    code = db.Column(db.String)

    def __init__(self,code):
        self.code = code

class Test(db.Model):
    ## Test table.
    __table__name = "Test"
    id = db.Column(db.Integer, primary_key = True)
    xpos = db.Column(db.String)
    ypos = db.Column(db.String)
    tool = db.Column(db.String)
    size = db.Column(db.String)

    def __init__(self,xpos,ypos,tool,size):
        self.xpos = xpos
        self.ypos = ypos
        self.tool = tool
        self.size = size

# Handles main page.
@app.route('/')
def index():
    return render_template("index.html")

def tester(data):
    print(data)
    for i in data:
        print(i['x-position'])
        new_data = Test(i["x-position"], i["y-position"], i['tool'],i['cursor-size'])
        db.session.add(new_data)
        db.session.commit()

test = socketio.on_event('hello', tester, namespace="")

if __name__ == "__main__":
    app.run()
